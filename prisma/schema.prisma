
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String
  email         String         @unique
  avatar        String?
  role          Role           @default(USER)
  status        UserStatus     @default(ACTIVE)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  notifications Notification[]
  activities    Activity[]
}

model Notification {
  id        String   @id @default(cuid())
  message   String
  date      DateTime @default(now())
  read      Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rule {
  id          String   @id @default(cuid())
  status      String   @unique
  description String
  min         Float
  max         Float
  isSystem    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model StrategicPlan {
  id        String    @id @default(cuid())
  name      String
  startYear Int
  endYear   Int
  version   String
  status    PlanStatus @default(DRAFT)
  pillars   Pillar[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Pillar {
  id              String         @id @default(cuid())
  title           String
  description     String?
  strategicPlan   StrategicPlan? @relation(fields: [strategicPlanId], references: [id])
  strategicPlanId String?
  objectives      Objective[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model Objective {
  id          String     @id @default(cuid())
  statement   String
  pillar      Pillar?    @relation(fields: [pillarId], references: [id])
  pillarId    String?
  initiatives Initiative[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Initiative {
  id            String     @id @default(cuid())
  title         String
  description   String?
  owner         String?
  collaborators String[]
  objective     Objective? @relation(fields: [objectiveId], references: [id])
  objectiveId   String?
  activities    Activity[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Activity {
  id              String          @id @default(cuid())
  title           String
  description     String
  department      String
  startDate       DateTime
  endDate         DateTime
  status          String
  weight          Int
  progress        Int
  approvalStatus  ApprovalStatus
  declineReason   String?
  pendingUpdate   String?
  initiative      Initiative?     @relation(fields: [initiativeId], references: [id])
  initiativeId    String?
  responsible     User?           @relation(fields: [responsibleId], references: [id])
  responsibleId   String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

enum Role {
  ADMINISTRATOR
  MANAGER
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

enum PlanStatus {
  DRAFT
  PUBLISHED
}

enum ApprovalStatus {
  PENDING
  APPROVED
  DECLINED
}
