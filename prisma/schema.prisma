// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model StrategicPlan {
  id         String    @id @default(cuid())
  name       String
  startYear  Int
  endYear    Int
  version    String
  status     PlanStatus @default(DRAFT)
  pillars    Pillar[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@map("strategic_plans")
}

model Pillar {
  id              String        @id @default(cuid())
  title           String
  description     String?
  strategicPlan   StrategicPlan @relation(fields: [strategicPlanId], references: [id], onDelete: Cascade)
  strategicPlanId String
  objectives      Objective[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@map("pillars")
}

model Objective {
  id          String     @id @default(cuid())
  statement   String
  pillar      Pillar     @relation(fields: [pillarId], references: [id], onDelete: Cascade)
  pillarId    String
  initiatives Initiative[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("objectives")
}

model Initiative {
  id          String     @id @default(cuid())
  title       String
  description String?
  owner       String
  objective   Objective  @relation(fields: [objectiveId], references: [id], onDelete: Cascade)
  objectiveId String
  activities  Activity[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("initiatives")
}

model Activity {
  id              String         @id @default(cuid())
  title           String
  description     String?
  department      String
  responsible     User           @relation(fields: [responsibleId], references: [id])
  responsibleId   String
  startDate       DateTime
  endDate         DateTime
  status          String         @default("Not Started")
  weight          Int
  progress        Int            @default(0)
  approvalStatus  ApprovalStatus @default(PENDING)
  declineReason   String?
  initiative      Initiative     @relation(fields: [initiativeId], references: [id], onDelete: Cascade)
  initiativeId    String
  pendingUpdate   Json?
  lastUpdated     DateTime?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  @@map("activities")
}

model Rule {
  id          String  @id @default(cuid())
  status      String  @unique
  description String
  min         Float
  max         Float
  isSystem    Boolean @default(false)
}

model User {
  id            String         @id @default(cuid())
  name          String
  email         String         @unique
  avatar        String
  role          Role           @default(USER)
  status        UserStatus     @default(ACTIVE)
  createdAt     DateTime       @default(now())
  activities    Activity[]
  notifications Notification[]

  @@map("users")
}

model Notification {
  id      String   @id @default(cuid())
  message String
  date    DateTime
  read    Boolean  @default(false)
  userId  String
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMINISTRATOR
  MANAGER
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

enum PlanStatus {
  DRAFT
  PUBLISHED
}

enum ApprovalStatus {
  PENDING
  APPROVED
  DECLINED
}
